version: "3.8"
services:
  
  backend:
    build:
      context: ./backend/.
    depends_on:
      - mysql
    environment:
      SERVICE_NAME: backend
      APP_ENV: production
      APP_DEBUG: 'false'
      APP_LOG_LEVEL: 'error'
      DB_CONNECTION: mysql
      DB_DRIVER: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password
    networks:
      - app_network
    container_name: backend
    volumes:
        - ./backend/.:/app
    restart: unless-stopped
    tty: true
    working_dir: /app
    ports:
      - "9000:9000"

  apiserver:
    image: nginx:1.19.0-alpine
    container_name: apiserver
    restart: unless-stopped
    tty: true
    working_dir: /app
    ports:
      - "8001:8001"
    volumes:
      - ./backend/.:/app
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app_network
    depends_on:
      - backend
    environment:
      SERVICE_NAME: apiserver

  frontend:
    build:
      context: ./frontend/.
    ports:
      - "80:80"
    container_name: frontend
    depends_on:
      - apiserver
    networks:
      - app_network
    restart: unless-stopped
    environment:
       SERVICE_NAME: frontend
       REACT_APP_API_URL: '/api'
       NODE_OPTIONS: "--max-old-space-size=700"
       NODE_ENV: production
    tty: true

  mysql:
    image: mysql:5
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    networks:
      - app_network
    ports:
      - 3306:3306
    container_name: mysql
    volumes:
      - dbdata:/var/lib/mysql/
    restart: unless-stopped
    tty: true

  adminer:
    image: adminer
    restart: on-failure
    tty: true
    ports:
      - 8080:8080
    container_name: adminer
    networks:
      - app_network

networks:
  default:
    external:
        name: app_network
  app_network:
    name: app_network
    driver: bridge

volumes:
  dbdata:
    driver: local
    name: dbdata